spring.application.name=Despesas-Pessoais

# ===============================================
# CONFIGURAÇÃO DO SERVIDOR
# ===============================================
# Porta onde a aplicação irá rodar.
server.port=${SERVER_PORT:8080}

# ===============================================
# CONFIGURAÇÃO DO BANCO DE DADOS (DataSource)
# ===============================================
# URL de conexão JDBC para o MySQL.
# Usa variáveis para o host e nome do banco, com padrões para ambiente local.
spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}:3306/${DB_NAME:DB_despesas}?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true

# Usuário do banco de dados.
spring.datasource.username=${DB_USERNAME}

# Senha do banco de dados.
# Em desenvolvimento, usará 'password'. Em produção, você definirá a variável de ambiente.
spring.datasource.password=${DB_PASSWORD}

# ===============================================
# CONFIGURAÇÃO DO JPA / HIBERNATE
# ===============================================
# 'update': Hibernate atualiza o schema do banco se a entidade mudar. Ótimo para dev.
# Em produção, geralmente se usa 'validate' ou 'none'.
spring.jpa.hibernate.ddl-auto=update

# Mostra no console o SQL que o Hibernate está executando.
spring.jpa.show-sql=true

# Formata o SQL exibido no console para melhor leitura.
spring.jpa.properties.hibernate.format_sql=true

# ======
## Tempo de expiração do token JWT em milissegundos.
## O padrão é 86400000 ms = 24 horas.
#app.jwt.expiration-ms=${JWT_EXPIRATION_MS:86400000}